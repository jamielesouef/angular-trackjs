{"version":3,"sources":["angular-trackjs.min.js","angular-trackjs.js"],"names":[],"mappings":"AAAA;AACA,ACDA;AACA;AACA;AACA;AACA;AACA;AALA,AAMA;AALA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"angular-trackjs.min.js","sourceRoot":"/source/","sourcesContent":["/*! Angular TrackJs v0.1.1 © 2016 Jamie Le Souef <jamielesouef@gmail.com> and Boris Kvid <bkvid@seek.com.au>/SEEK Ltd. */\n!function(r){\"use strict\";r.module(\"trackJs\",[]);var n=function(r){return function(n){n&&r.trackJs&&r.trackJs.configure(n)}};r.module(\"trackJs\").config([\"$provide\",function(r){r.decorator(\"$exceptionHandler\",[\"$delegate\",\"exceptionHandlerDecorator\",function(r,n){return n.decorate(r)}])}]),r.module(\"trackJs\").factory(\"exceptionHandlerDecorator\",[\"$window\",function(r){var n=function(n){return function(t,e){r.trackJs&&r.trackJs.track(t),n(t,e)}};return{decorate:n}}]),r.module(\"trackJs\").factory(\"trackJs\",[\"$window\",function(r){var t=[],e=function(n){r.trackJs.track(n)},o=function(r){t=t.concat(r);var n=function(r){var n,e=function(r,n){var t=r instanceof RegExp?r.test(n):r===n;return t},o=function(n,t){var o=r.network.map(function(r){return e(n,r[t])}).some(function(r){return r===!0});return o},c=function(n){var t,c=[];for(var u in n){var a=n[u];\"pageUrl\"===u?c.push(e(a,r.url)):\"message\"===u?c.push(e(n.message,r.message)):c.push(o(a,u))}return t=c.every(function(r){return r===!0})};return n=t.map(c).some(function(r){return r===!0}),!n};this.configure({onError:n})};return{track:e,ignore:o,configure:n(r)}}]),r.module(\"trackJs\").provider(\"TrackJs\",function(){this.configure=n(window),this.$get=r.noop})}(angular);\n//# sourceMappingURL=angular-trackjs.min.js.map\n","/*!\n * Angular TrackJs v0.1.1\n *\n * © 2016, Jamie Le Souef <jamielesouef@gmail.com> and Boris Kvid <bkvid@seek.com.au>/SEEK Ltd.\n */\n\n(function (angular) {\n    'use strict';\n\n    angular.module('trackJs', []);\n\n    var configure = function (windowObj) {\n        return function (options) {\n            if (options && windowObj.trackJs) {\n                windowObj.trackJs.configure(options);\n            }\n        };\n    };\n\n    angular.module('trackJs').config([\"$provide\", function ($provide) {\n        $provide.decorator(\"$exceptionHandler\", [\"$delegate\", \"exceptionHandlerDecorator\", function ($delegate, exceptionHandlerDecorator) {\n            return exceptionHandlerDecorator.decorate($delegate);\n        }]);\n    }]);\n\n    angular.module('trackJs').factory('exceptionHandlerDecorator', [\"$window\", function ($window) {\n        var decorate = function ($delegate) {\n            return function (exception, cause) {\n                if ($window.trackJs) {\n                    $window.trackJs.track(exception);\n                }\n\n                $delegate(exception, cause);\n            };\n        };\n\n        return {\n            decorate: decorate\n        };\n    }]);\n\n    angular.module('trackJs').factory('trackJs', [\"$window\", function ($window) {\n        var ignoreRules = [];\n\n        var track = function (message) {\n            $window.trackJs.track(message);\n        };\n\n        var ignore = function (newRules) {\n            ignoreRules = ignoreRules.concat(newRules);\n\n            var onError = function (errorPayload) {\n                var isToBeIgnored;\n\n                var isMatchStandard = function (rulePropValueOrRegex, errorValue) {\n                    var isAssertTrue = rulePropValueOrRegex instanceof RegExp ? rulePropValueOrRegex.test(errorValue) : rulePropValueOrRegex === errorValue;\n                    return isAssertTrue;\n                };\n\n                var isMatchNetwork = function (rulePropValueOrRegex, networkProperty) {\n                    var isAssertTrue = errorPayload.network\n                            .map(function (networkObj) {\n                                return isMatchStandard(rulePropValueOrRegex, networkObj[networkProperty]);\n                            })\n                            .some(function (isMatching) {\n                                return isMatching === true;\n                            });\n\n                    return isAssertTrue;\n                };\n\n                var isMatching = function (rule) {\n                    var propMatchResults = [];\n                    var isFullyMatchingWithIgnoreRule;\n\n                    for (var property in rule) {\n                        var expectedValue = rule[property];\n\n                        if (property === 'pageUrl') {\n                            propMatchResults.push(isMatchStandard(expectedValue, errorPayload.url));\n                        } else if (property === 'message') {\n                            propMatchResults.push(isMatchStandard(rule.message, errorPayload.message));\n                        } else {\n                            propMatchResults.push(isMatchNetwork(expectedValue, property));\n                        }\n                    }\n\n                    isFullyMatchingWithIgnoreRule = propMatchResults.every(function (submatchingResult) {\n                        return submatchingResult === true;\n                    });\n\n                    return isFullyMatchingWithIgnoreRule;\n                };\n\n\n                isToBeIgnored = ignoreRules\n                    .map(isMatching)\n                    .some(function (isMatching) {\n                        return isMatching === true;\n                    });\n\n                return !isToBeIgnored; // Returning inverse of isToBeIgnored. (A false return value means error will be swallowed.)\n            };\n\n            this.configure({\n                onError: onError\n            });\n        };\n\n        return {\n            track: track,\n            ignore: ignore,\n            configure: configure($window)\n        };\n    }]);\n\n    angular.module('trackJs').provider('TrackJs', function () {\n        this.configure = configure(window);\n        this.$get = angular.noop;\n    });\n\n})(angular);\n"]}